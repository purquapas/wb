if [ ! "$_CBSD_ZFS_SUBR" ]; then
_CBSD_ZFS_SUBR=1
###

# return 0 if $1 is not valid ZFS mountpoint
# return 1 if $1 is valid ZFS mountpoint and mounted
# return 2 if $1 is valid ZFS mountpoint and not mounted
# if  zfsmnt /mnt; then
#    echo " not zfs (mounted or not) mountpoint"
# fi
# export ZPOOL for name ZFS for $1 mountpoint
zfsmnt() {
	local _A

	ZPOOL=$(/sbin/zfs list -Ho name,mountpoint | while read _name _mnt; do
		[ "${_mnt}" = "${1}" ] && echo ${_name} && exit 2
	done)

	if [ $? -eq 2 ]; then
		#    Check for mounted
		_A=$( /sbin/zfs get -Ho value mounted ${ZPOOL} )
		[ "${_A}" = "yes" ] && return 1
		return 2
	else
		return 0
	fi
}

# return 0 if $1 is not valid ZFS filesystem
# return 1 if $1 is valid ZFS mountpoint and mounted
# return 2 if $1 is valid ZFS mountpoint and not mounted
# if  zfsfs /mnt; then
#    echo " not zfs (mounted or not) mounted"
# fi
zfsfs() {
	local _A

	_A=$(/sbin/zfs list -Ho name | while read _name; do
		[ "${_name}" = "${1}" ] && exit 2
	done)

	if [ $? -eq 2 ]; then
		#    Check for mounted
		_A=$( /sbin/zfs get -Ho value mounted ${1} )
		[ "${_A}" = "yes" ] && return 1
		return 2
	else
		return 0
	fi
}

# export zmnt if $zroot exist, return 1
getmnt() {
	local _res

	[ -z "$1" ] && return 1
	zmnt=$( /sbin/zfs get -Ho value mountpoint ${1} )
	return $?
}

# return 0 if ${ZPOOL}/$1 zfs source exist
# if zfsroot jail1; then
# echo "zroot/$jail1 exist
# fi
zfsroot() {
	[ -z "$1" ] && return 0

	/sbin/zfs list -H -o name | while read _mnt; do
		[ "$_mnt" = "${ZPOOL}/${1}" ] && exit 0
	done

	return $?
}


# $1 - oldjname
# $2 - newjname
zfs_snapshot_rename()
{
	local _fs _jname _mod _snapname _oldjname _newjname
	_oldjname="$1"
	_newjname="$2"

	[ -z "${_oldjname}" -o -z "${_newjname}" ] && return 0

	# [ -n "${_oldjname}" ] && _mod="${ZPOOL}/${_oldjname}"
	_mod="${ZPOOL}"

	for _fs in $( /sbin/zfs list -H -r -t snapshot -o name ${_mod} 2>/dev/null ); do
		_jname=$( /sbin/zfs get -H -o value -s local cbsdsnap:jname "${_fs}" 2>/dev/null )
		[ -z "${_jname}" ] && continue
		[ -n "${_oldjname}" -a "${_oldjname}" != "${_jname}" ] && continue
		_snapname=$( /sbin/zfs get -H -o value -s local cbsdsnap:snapname "${_fs}" 2>/dev/null )
		[ -z "${_snapname}" ] && continue
		/sbin/zfs set cbsdsnap:jname=${_newjname} ${ZPOOL}@${_snapname}
		# ${ECHO} "${MAGENTA}ZFS snapshot renamed: ${GREEN}${_snapname}${NORMAL}"
	done
}

###
fi
