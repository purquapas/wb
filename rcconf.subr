#v10.0.4
# this is a temporary wrapper for version 9.2.2 is intended to make the transition to sqlite3 version if rc.conf more painless
# required:
# strings.subr
#

# init_rcconf ( $jname must be not empty )
# ( $sqlfile - specify sqlfile in dbdir for searching data. If empty - local file is prefered )
init_rcconf()
{
	local _JCOL _BCOL _A _ALLJCOL _ALLBCOL jname _sqlfile _datafile="local" i

	[ -n "${2}" ] && _datafile="${2}"
	_sqlfile="${dbdir}/${_datafile}.sqlite"

	[ ! -f "${_sqlfile}" ] && return 0

	. ${sharedir}/local-jails.schema
	_JCOL="${MYCOL}"

	#clean sqlite3 schema variables
	for i in ${_JCOL}; do
		unset ${i}
	done

	_ALLJCOL=$( echo ${_JCOL}|/usr/bin/tr " " "," )

	# empty string on remote node if cbsd version is mistmatch ( diff. jail schema )
	_A=$( 2>/dev/null env sqldelimer="|" ${miscdir}/sqlcli ${_sqlfile} "SELECT ${_ALLJCOL} FROM jails WHERE jname=\"$1\" " )

	[ -z "${_A}" ] && return 1

	. ${strings}
	sqllist "${_A}" ${_JCOL}

	#skip for not my emulator
	if [ -n "${source_emulator}" ]; then
		[ "${source_emulator}" != "${emulator}" ] && continue
	fi

	. ${strings}
	sqllist "${_A}" ${_JCOL}

	case "${emulator}" in
		"bhyve"|"virtualbox"|"xen")
			. ${sharedir}/${emulator}.conf
			_BCOL="${MYCOL}"
			jid=-1
			_ALLBCOL=$( echo ${_BCOL}|/usr/bin/tr " " "," )
			_A=$( 2>/dev/null env sqldelimer="|" ${miscdir}/sqlcli ${_sqlfile} "SELECT ${_ALLBCOL} FROM ${emulator} WHERE jname=\"$1\"" )
			sqllist "${_A}" ${_BCOL}
			;;
	esac

	init_jail_path

	# sanity check that jid and status are similar to the real state, for localhost  only
	if [ "${_datafile}" = "local" ]; then
		get_jid
		case "${emulator}" in
			"bhyve")
				if [ -e "/dev/vmm/${jname}" ]; then
					status="1"
					myjid="1"
					jid="1"
				fi
				;;
			"virtualbox")
				. ${workdir}/virtualbox.subr
				_state=$( ${VBOX_MGMT_CMD} showvminfo ${jname}| /usr/bin/awk '/^State: /{print $2}' )
				if [ "${_state}" = "running" ]; then
					status="1"
					myjid="1"
					jid="1"
				else
					status="0"
					myjid="0"
					jid="0"
				fi
				;;
			"xen")
				. ${workdir}/xen.subr
				_state=$( ${XL_CMD} list ${jname} > /dev/null 2>&1 )
				if [ $? -eq 0 ]; then
					status="1"
					myjid="1"
					jid="1"
				else
					status="0"
					myjid="0"
					jid="0"
				fi
				;;

		esac

		# check jid when sqlite information is wrong and update it
		[ ${myjid} -ne $jid ] && jid=${myjid} && ${miscdir}/sqlcli ${dbdir}/local.sqlite "UPDATE jails SET jid=\"${myjid}\" WHERE jname=\"${1}\""

		# fix for status only for 0,1, not for slave or maintenace
		if [ ${status} -eq 0 -o ${status} -eq 1 ]; then
			if [ ${myjid} -ne 0 -a ${status} -eq 0 ]; then
				status=1
				${miscdir}/sqlcli ${dbdir}/local.sqlite "UPDATE jails SET status=\"1\" WHERE jname=\"${1}\""
			fi
			if [ ${myjid} -eq 0 -a ${status} -ne 0 -a ${status} -ne 2 ]; then
				status=0
				${miscdir}/sqlcli ${dbdir}/local.sqlite "UPDATE jails SET status=\"0\" WHERE jname=\"${1}\""
			fi
		fi
	fi

	# clean some variables if equal 0
	[ "${basename}" = "0" ] && unset basename
	[ "${slavenode}" = "0" ] && unset slavenode
	[ "${masterhost}" = "0" ] && unset masterhost
	[ "${exec_stop}" = "0" ] && unset ${exec_stop}
	[ "${exec_poststart}" = "0" ] && unset ${exec_poststart}
	[ "${exec_poststop}" = "0" ] && unset ${exec_poststop}
	[ "${exec_prestart}" = "0" ] && unset ${exec_prestart}
	[ "${exec_prestop}" = "0" ] && unset ${exec_prestop}
}

init_rcconf $jname $sqlfile
