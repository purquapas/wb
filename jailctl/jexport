#!/usr/local/bin/cbsd
#v10.1.0
globalconf="${workdir}/cbsd.conf";
MYARG="jname"
MYOPTARG="compress imgname"
MYDESC="Export jail into image"
CBSDMODULE="jail"

set -e
. ${globalconf}
set +e

. ${subr}
. ${strings}
. ${tools}

[ -z "${1}" ] && select_jail_by_list -s "List of all jails"
init $*

if [ -z "${imgname}" ]; then
	imgname="${jname}.img"
else
	imgname="${imgname}.img"
fi

. ${jrcconf}
[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"
[ ${jid} -ne 0 -a "${emulator}" = "bhyve" ] && err 1 "${MAGENTA}VM is online${NORMAL}"

DEST="${exportdir}/${imgname}"
JAILRCCONF="${jailsysdir}/${jname}/rc.conf_${jname}"

jmkrcconf jname=${jname} > ${JAILRCCONF}

# check for already existance and offline
[ ! -d "${data}" ] && err 1 "${MAGENTA}No jail data for ${jname}: ${GREEN}${data}${NORMAL}"

SPACER="___NCSTART_HEADER=1_ \
___NCSTART_RCCONF=1 \
___NCSTART_FSTAB=1 \
___NCSTART_PKGINFO=1 \
___NCSTART_DESCR=1 \
___NCSTART_INFO=1 \
___NCSTART_LOCALFSTAB=1
___NCSTART_SYSDATA=1 \
___NCSTART_DATA=1"

for _part in ${SPACER}; do
	case ${_part} in
		___NCSTART_HEADER*)
			res=$( imgpart mode=pack jname=${jname} part=header out=${DEST} )
			[ $? -ne 0 ] && err 1 "${MAGENTA}Error in ${_part}: ${res}${NORMAL}"
			;;
		___NCSTART_RCCONF*)
			#currenlty we import/export operation for rc.conf via ascii format
			#cause diffrence node can have version of cbsd with incompattible jail schema
			#so create rc.conf for pack operation
			res=$( imgpart mode=pack jname=${jname} part=rcconf out=${DEST} )
			[ $? -ne 0 ] && err 1 "${MAGENTA}Error in ${_part}: ${res}${NORMAL}"
			;;
		___NCSTART_PKGINFO*)
			res=$( imgpart mode=pack jname=${jname} part=pkginfo out=${DEST} )
			[ $? -ne 0 ] && err 1 "${MAGENTA}Error in ${_part}: ${res}${NORMAL}"
			;;
		___NCSTART_DESCR*)
			res=$( imgpart mode=pack jname=${jname} part=descr out=${DEST} )
			[ $? -ne 0 ] && err 1 "${MAGENTA}Error in ${_part}: ${res}${NORMAL}"
			;;
		___NCSTART_INFO*)
			imgpart mode=pack jname=${jname} part=info out=${DEST}
			[ $? -ne 0 ] && err 1 "${MAGENTA}Error in ${_part}: ${res}${NORMAL}"
			;;
		___NCSTART_FSTAB*)
			TMPFSTAB="${ftmpdir}/fstab.$$"
			[ ! -f "${mount_fstab}" ] && touch ${mount_fstab}
			/bin/cp ${mount_fstab} ${TMPFSTAB}
			res=$( replacewdir file0="${mount_fstab}" old=${workdir} new="CBSDROOT" )
			[ $? -ne 0 ] && err 1 "${MAGENTA}Error in ${_part} replacewdir: ${res}${NORMAL}"
			res=$( imgpart mode=pack jname=${jname} part=fstab out=${DEST} )
			[ $? -ne 0 ] && err 1 "${MAGENTA}Error in ${_part}: ${res}${NORMAL}"
			/bin/mv ${TMPFSTAB} ${mount_fstab}
			;;
		___NCSTART_LOCALFSTAB*)
			# localfstab is not mandatory file. Errcode is always 0
			res=$( imgpart mode=pack jname=${jname} part=localfstab out=${DEST} || true )
			[ $? -ne 0 ] && err 1 "${MAGENTA}Error in ${_part}: ${res}${NORMAL}"
			;;
		___NCSTART_SYSDATA*)
			res=$( imgpart mode=pack jname=${jname} part=sysdata out=${DEST} )
			[ $? -ne 0 ] && err 1 "${MAGENTA}Error in ${_part}: ${res}${NORMAL}"
			;;
		___NCSTART_DATA*)
			#test for zfs mounted & mount if not
			case $zfsfeat in
				1)
					. $zfstool
					zfsmnt ${data}
					if [ $? -eq 2 ]; then
						WASNOMOUNT=1
					else
						WASNOMOUNT=0
					fi
					[ $WASNOMOUNT -eq 1 ] && /sbin/zfs mount "${ZPOOL}"
					;;
			esac
			res=$( imgpart mode=pack jname=${jname} part=data out=${DEST} )
			[ $? -ne 0 ] && err 1 "${MAGENTA}Error in ${_part}: ${res}${NORMAL}"
			[ "$WASNOMOUNT" = "1" ] && zfs unmount "${ZPOOL}"
			;;
	esac
done

if [ -s "${DEST}" ]; then
	imgfile=$( basename ${DEST} )
	img_size=$( stat -f "%z" ${DEST} 2>/dev/null )
	if conv2human "${img_size}"; then
		img_size=$convval
	fi
	err 0 "${MAGENTA}Images size for ${imgfile}: ${GREEN}${img_size}${NORMAL}"
else
	err 1 "${MAGENTA}Unknown error in jexport${NORMAL}"
fi
