#!/usr/local/bin/cbsd
#v10.0.7
MYARG="old new host_hostname"
MYOPTARG="ip4_addr verbose"
MYDESC="Jail cloning"
CBSDMODULE="jail"

. ${subr}
. ${tools}
. ${jfs}
. ${strings}

init $*

myjid=$( cbsdsql local SELECT jid FROM jails WHERE jname=\"${old}\" 2>/dev/null )
[ -z "${myjid}" ] && err 1 "${MAGENTA}No such jail: ${GREEN}${old}${NORMAL}"
[ $myjid -ne 0 ] && err 1 "${MAGENTA}Jail is online. Please stop them: ${GREEN}${old}${NORMAL}"

myjid=$( cbsdsql local SELECT jid FROM jails WHERE jname=\"${new}\" 2>/dev/null )
[ -n "${myjid}" ] && err 1 "${MAGENTA}Jail already exist: ${GREEN}${new}${NORMAL}"

jname="${old}"
ip4_addr_new="${ip4_addr}"
host_hostname_new="${host_hostname}"

. ${jrcconf}
[ "${emulator}" = "bhyve" ] && err 1 "${MAGENTA}Jail in bhyve mode. Use ${GREEN}cbsd brename${MAGENTA} instead${NORMAL}"

DST="${jaildatadir}/${new}-${jaildatapref}"
SRC="${jaildatadir}/${old}-${jaildatapref}"
JAILDIR="${jaildir}/${new}"
JAILFSTAB="${jailfstabdir}/${jailfstabpref}${new}"
JAILLOCALFSTAB="${jailfstabdir}/${jailfstabpref}${new}.local"
JAILFSTABORIG="${jailfstabdir}/${jailfstabpref}${old}"
JAILLOCALFSTABORIG="${jailfstabdir}/${jailfstabpref}${old}.local"
JAILRCCONF="${jailrcconfdir}/rc.conf_${new}"
JAILRCCONFORIG="${jailrcconfdir}/rc.conf_${old}"
SYSDIROLD="${jailsysdir}/${old}"
SYSDIRNEW="${jailsysdir}/${new}"

#rename zfs fs source
case $zfsfeat in
	1)
		. $zfstool
		zfsmnt ${SRC}
		[ $? -eq 2  ] && zfs mount ${ZPOOL}
	;;
esac

[ ! -d "${SRC}" ] && err 1 "${MAGENTA}No jail data: ${GREEN}${SRC}${NORMAL}"

if [ -d "${DST}" ]; then
	rmdir ${DST} >/dev/null 2>&1
	[ -d "${DST}" ] && err 1 "${MAGENTA}Jail data already exist and it not empty: ${GREEN}${DST}${NORMAL}"
fi

[ ! -d "${JAILDIR}" ] && mkdir -p ${JAILDIR}
[ ! -d "${jailfstab}"  ] && mkdir -p $jailfstabdir
[ ! -d "${jailrcconf}"  ] && mkdir -p $jailrcconfdir

printf "${MAGENTA}Cloning.${NORMAL}"
jmkrcconf jname=${old} > $JAILRCCONF

${SYSRC_CMD} -qf ${JAILRCCONF} jname="${new}" > /dev/null 2>&1
jregister jname=${new}

rm -f ${JAILRCCONF}

if [ -f "${JAILFSTABORIG}" ]; then
	/usr/bin/sed "s/\/${old}/\/${new}/g" ${JAILFSTABORIG} > ${JAILFSTAB}
	dot "fstab"
fi

[ -f "${JAILLOCALFSTABORIG}" ] && cp ${JAILLOCALFSTABORIG} ${JAILLOCALFSTAB} && dot "cp fstablocal"

cbsdsql local UPDATE jails SET path=\"${jaildir}/${new}\",mount_fstab=\"${jailfstabdir}/${jailfstabpref}${new}\",data=\"${jaildatadir}/${new}-${jaildatapref}\",rcconf=\"${jailrcconfdir}/rc.conf_${new}\",host_hostname=\"${host_hostname}\" WHERE jname=\"${new}\"

[ -n "${ip4_addr_new}" ] && cbsdsql local UPDATE jails SET ip4_addr=\"${ip4_addr_new}\" WHERE jname=\"${new}\"
[ -n "${host_hostname_new}" ] && cbsdsql local UPDATE jails SET host_hostname=\"${host_hostname_new}\" WHERE jname=\"${new}\"

jname=${new}
if [ "${verbose}" = "1" ]; then
	clonedata $SRC $DST rsync
else
	clonedata $SRC $DST rsync > /dev/null 2>&1
fi

dot "clone rsync"

if [ -d "$SYSDIROLD" ]; then
	[ -d "${SYSDIRNEW}" ] && rm -rf ${SYSDIRNEW}
	cp -Rp ${SYSDIROLD} ${SYSDIRNEW}
	dot "cp sysdir"
fi

#rctl
LIMITS="${jailsysdir}/${old}/jail.limits"
jmkrctlconf jname=${old} type=rctl mode=tofile file=${LIMITS}
jmkrctlconf jname=${old} type=extra mode=tofile file=${LIMITS}.extra
jmkrctlconf jname=${new} type=rctl mode=tosql file=${LIMITS}
jmkrctlconf jname=${new} type=extra mode=tosql file=${LIMITS}.extra
#

err 0 "${GREEN}ok${NORMAL}"
