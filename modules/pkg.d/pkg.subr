init_path()
{
	PKG_STATIC_PATH="/usr/local/sbin/pkg-static"
	# PKG_CMD defined in ${platform}.subr
	PKG_PATH="${PKG_CMD}"

	if [ ! -f "${path}${PKG_STATIC_PATH}" ]; then
		PKG_STATIC_PATH="${PKG_PATH}"
		${ECHO} "${MAGENTA}First running pkg. Bootstrapping...${NORMAL}"
		pkg_bootstrap
		[ ! -f "${path}${PKG_PATH}" ] && err 1 "You have no pkg binary in PATH"
	fi

	#prefered for static version if exist
	[ ! -f "${PKG_STATIC_PATH}" ] && PKG_STATIC_PATH="${PKG_PATH}"

	PKGCONF_SKEL="${_MYDIR}/pkg.conf"
}

pkg_info()
{
	local _res
	${PKG_PRE} ${PKG_STATIC_PATH} ${PKGARGS} info ${*}
	_res=$?
	return ${_res}
}

pkg_query()
{
	local _res
	${PKG_PRE} ${PKG_STATIC_PATH} ${PKGARGS} query ${*}
	_res=$?
	return ${_res}
}


pkg_remove()
{
	local _res
	${PKG_PRE} ${PKG_STATIC_PATH} ${PKGARGS} remove -y ${*}
	_res=$?
	return ${_res}
}

pkg_install()
{
	local _res
	${PKG_PRE} ${PKG_STATIC_PATH} ${PKGARGS} install -g -U -y ${*}
	_res=$?
	# Remove cache in jail
	[ -n "${jname}" -a -d "${path}/var/cache/pkg" ] && /bin/rm -rf ${path}/var/cache/pkg/*
	return ${_res}
}


pkg_update()
{
	local _res
	${PKG_PRE} ${PKG_STATIC_PATH} ${PKGARGS} update -f ${*}
	_res=$?
	return ${_res}
}

pkg_upgrade()
{
	local _res
	#    ${PKG_STATIC_PATH} ${PKGARGS} update -f
	${PKG_PRE} ${PKG_STATIC_PATH} ${PKGARGS} upgrade -g -U -y ${*}
	_res=$?
	# Remove cache in jail
	[ -n "${jname}" -a -d "${path}/var/cache/pkg" ] && /bin/rm -rf ${path}/var/cache/pkg/*
	return ${_res}
}

# $1 - destination file
pkg_set_conf()
{
	[ -z "$1" ] && err 1 "pkg_set_conf: please set output file"
	[ -z "${pkgsite}" ] && err 1 "pkg_set_conf: please set pkgsite"
	/usr/bin/sed s%PKGSITE%${pkgsite}%g ${PKGCONF_SKEL} > ${1}
}

# First start of pkg
pkg_bootstrap()
{
	local _res _ret

	if TMPDIR=/dev/null ASSUME_ALWAYS_YES=yes \
		PACKAGESITE=file:///nonexistent \
		${PKG_PRE} ${PKG_STATIC_PATH} info -x 'pkg(-devel)?$' >/dev/null 2>&1; then
			return 0
	fi
	printf "${MAGENTA}pkg: [${GREEN}bootstrap...${MAGENTA}${NORMAL}"

	_res=$( ${PKG_PRE} env ASSUME_ALWAYS_YES=yes ${PKG_STATIC_PATH} ${PKGARGS} bootstrap -f 2>&1 )
	_ret=$?


	if [ ${_ret} -eq 0 ]; then
		printf "${GREEN}Ok${MAGENTA}]${NORMAL}"
		echo
	else
		printf "${MAGENTA}Ok${MAGENTA}]${NORMAL}"
		echo
		echo "${_res}"
		return ${_ret}
	fi

	pkg_update
	return ${_ret}
}

# $1 - listfile
install_from_list()
{
	local _res
	[ ! -f "${1}" ] && err 1 "${MAGENTA}No such list: ${GREEN}${1}${NORMAL}"
	PKGLIST=$( /bin/cat ${1} |/usr/bin/xargs )
	printf "install for ${PKGLIST}...${MAGENTA}]${NORMAL}\n"
	${PKG_PRE} ${PKG_STATIC_PATH} install ${PKGLIST}
	_res=$?
	# Remove cache in jail
	[ -n "${jname}" -a -d "${path}/var/cache/pkg" ] && /bin/rm -rf ${path}/var/cache/pkg/*

	/usr/local/bin/cbsd unmountfstab jroot=${path} fstab=${mount_fstab} > /dev/null 2>&1
	/sbin/umount -f ${path}/dev
	unmountbase
	[ $delpkglist -eq 1 ] && /bin/rm -f ${pkglist}
	return ${_res}
}

prepare_jail()
{
	mountbase -o "" -p "" -d "" -c "" -s ""
	[ -f "${mount_fstab}" ] && /usr/local/bin/cbsd mountfstab jroot=${path} fstab=${mount_fstab} jname="${jname}"
	[ -f "${mount_fstab}.local" ] && /usr/local/bin/cbsd mountfstab jroot=${path} fstab=${mount_fstab}.local jname="${jname}"
	/sbin/mount -t devfs devfs ${path}/dev
	trap "${TRAP} /usr/local/bin/cbsd jcleanup jname=$jname" HUP INT ABRT BUS TERM EXIT
}
