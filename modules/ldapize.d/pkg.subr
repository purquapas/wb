PKGPATH="/usr/sbin/pkg"
PKGCONF_SKEL="${_MYDIR}/pkg.conf"

pkg_info()
{
	${PKGPATH} ${PKGARGS} info -g -e ${1}
}

pkg_remove()
{
	${PKGPATH} ${PKGARGS} remove -y ${1}
}

pkg_update()
{
	#module.run_command("%s %s update" % (pkgsite, pkgin_path))
}

pkg_install()
{
	${PKGPATH} ${PKGARGS} update -f
	${PKGPATH} ${PKGARGS} install -g -U -y ${1}
}

# $1 - destination file
pkg_set_conf()
{
	[ -z "$1" ] && err 1 "pkg_set_conf: please set output file"
	[ -z "${pkgsite}" ] && err 1 "pkg_set_conf: please set pkgsite"
	sed s%PKGSITE%${pkgsite}%g ${PKGCONF_SKEL} > ${1}
}

# First start of pkg
pkg_bootstrap()
{
	#    set -x xtrace
	printf "${MAGENTA}pkg: [${GREEN}bootstrap... "
	${PKGPATH} ${PKGARGS} > /dev/null 2>&1
	printf "looking for new version... "
	${PKGPATH} ${PKGARGS} update -f > /dev/null 2>&1
	#lets upgrade pkg if new version available
	printf "upgrading... "
	#need for pkg upgrade twice for reinstalling pkg with "needed shared library changed"
	${PKGPATH} ${PKGARGS} upgrade -f > /dev/null 2>&1
	#need for pkg upgrade twice for reinstalling pkg with "needed shared library changed"
	${PKGPATH} ${PKGARGS} upgrade -f > /dev/null 2>&1
	printf "${MAGENTA}]${NORMAL}\n"
	#    set +x xtrace
}

# $1 - listfile
install_from_list()
{
	[ ! -f "${1}" ] && err 1 "${MAGENTA}No such list: ${GREEN}${1}${NORMAL}"
	PKGLIST=`cat ${1} |xargs`
	printf "install for ${PKGLIST}...${MAGENTA}]${NORMAL}\n"
	chroot ${path} env ASSUME_ALWAYS_YES=yes pkg install ${PKGLIST}
	cbsd unmountfstab jroot=${path} fstab=${mount_fstab} > /dev/null 2>&1
	umount -f ${path}/dev
	unmountbase
	[ $delpkglist -eq 1 ] && rm -f ${pkglist}
}

pkg_prepare_jail()
{
	mountbase -o "" -p "" -d "" -c "" -s ""
	[ -f "${mount_fstab}" ] && cbsd mountfstab jroot=${path} fstab=${mount_fstab} jname="${jname}"
	[ -f "${mount_fstab}.local" ] && cbsd mountfstab jroot=${path} fstab=${mount_fstab}.local jname="${jname}"
	mount -t devfs devfs ${path}/dev
	trap "${TRAP} cbsd jcleanup jname=$jname" HUP INT ABRT BUS TERM EXIT
}
