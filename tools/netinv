#!/bin/sh
#v9.2.2
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG=""
MYDESC="Update Network-related information in inventory tables"

set -e
. ${globalconf}
set +e

. ${subr}
init $*

# create SQL schema
${miscdir}/sqlcli ${dbdir}/local.sqlite DROP TABLE IF EXISTS net
/usr/local/bin/cbsd ${miscdir}/updatesql ${dbdir}/inv.${nodename}.sqlite ${distdir}/share/local-net.schema

update_sql()
{
	[ -z "${1}" ] && return 0

	local _nic _mac _type _media _ip4 _ip6 _mask4 _mask6 _status _usr1 _usr2 _usr3 _val _main4 _main5
	local _num
	local _NICSTABLE="mac type media ip4 ip6 mask4 mask6 status usr1 usr2 usr3"

	_nic="${1}"
	_mac=$( /sbin/ifconfig ${_nic} | /usr/bin/awk '/ether / {print $2}' )
	_main4=$( /sbin/ifconfig $1 | /usr/bin/awk '/inet / { print $2, $4}' | /usr/bin/head -n 1 )
	_main5=$( /sbin/ifconfig $1 | /usr/bin/awk '/inet6 / { print $2, $4}' | /usr/bin/head -n 1 )

	if [ -n "${_main4}" ]; then
		_ip4=${_main4%% *}
		_mask4=${_main4##* }
	fi

	if [ -n "${_main6}" ]; then
		_ip6=${_main6%% *}
		_mask6=${_main6##* }
	fi

	#begin for collect SQL string
	STR="UPDATE net SET "
	_num=0

	for i in ${_NICSTABLE}; do
		eval _val=\$_${i}
		if [ -n "${_val}" ]; then
			[ ${_num} -ne 0 ] && STR="${STR},"
			STR="${STR} ${i} = \"${_val}\""
			_num=$(( _num + 1 ))
		fi
	done

	STR="${STR} WHERE nic=\"${_nic}\""
	${miscdir}/sqlcli ${dbdir}/local.sqlite ${STR}
}

#MAIN

NICS=$( ${miscdir}/nics-list -s "lo tap bridge" )

#first of all: populate all available interfaces
for i in ${NICS}; do
	INSERTSQL="INSERT INTO net ( nic ) VALUES ( \"${i}\" )"
	${miscdir}/sqlcli ${dbdir}/local.sqlite ${INSERTSQL}
done

# second: collect data for interesting iface
for i in ${NICS}; do
	update_sql $i
done

GW4=$( /sbin/route -n get 0.0.0.0 2>/dev/null| /usr/bin/awk '/gateway:/{print $2}' )
GW6=$( /sbin/route -n get -inet6 :: 2>/dev/null | /usr/bin/awk '/gateway:/{print $2}' )
FIBS=$( /sbin/sysctl -n net.fibs 2>/dev/null )

[ -z "${FIBS}" ] && FIBS=0

${miscdir}/sqlcli ${dbdir}/local.sqlite DROP TABLE IF EXISTS gw
/usr/local/bin/cbsd ${miscdir}/updatesql ${dbdir}/inv.${nodename}.sqlite ${distdir}/share/local-gw.schema

[ -n "${GW4}" ] && ${miscdir}/sqlcli ${dbdir}/local.sqlite "INSERT INTO gw ( gw,val ) VALUES ( \"gw4\",\"$GW4\" )"
[ -n "${GW6}" ] && ${miscdir}/sqlcli ${dbdir}/local.sqlite "INSERT INTO gw ( gw,val ) VALUES ( \"gw6\",\"$GW6\" )"

if [ ${FIBS} -gt 1 ]; then
	for i in $( /usr/bin/jot ${FIBS} ); do
		eval FIB4=$( /usr/sbin/setfib ${i} /sbin/route -n get 0.0.0.0 2>/dev/null| /usr/bin/awk '/gateway:/{print $2}' )
		eval FIB6=$( /usr/sbin/setfib ${i} /sbin/route -n get -inet6 :: 2>/dev/null | /usr/bin/awk '/gateway:/{print $2}' )
		[ -n "${FIB4}" ] && ${miscdir}/sqlcli ${dbdir}/local.sqlite "INSERT INTO gw ( gw,val ) VALUES ( \"fib4_${i}\",\"$FIB4\" )"
		[ -n "${FIB6}" ] && ${miscdir}/sqlcli ${dbdir}/local.sqlite "INSERT INTO gw ( gw,val ) VALUES ( \"fib6_${i}\",\"$FIB6\" )"
	done
fi
