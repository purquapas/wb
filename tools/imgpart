#!/usr/local/bin/cbsd
#v10.1.0
globalconf="${workdir}/cbsd.conf";
MYARG="jname part mode"
MYOPTARG="out hdrver"
MYDESC="Pack or extract chunk from from image"
ADDHELP="out=path_to_file for ascii-part or directory to extract for binary\n\
or for binary image from pack mode\n\
part variants: header,rcconf,fstab,pkginfo,descr,info,sysdata,data\n\
mode=pack,extract\n"

set -e
. ${globalconf}
set +e

. ${subr}

init $*

extractchunk()
{
	local _dir

	if [ -n "${out}" ]; then
		_dir=$( /usr/bin/dirname ${out} )
		if [ ! -d "${_dir}" ]; then
			/bin/mkdir ${_dir}
			/usr/sbin/chown ${cbsduser}:${cbsduser} ${_dir}
		fi
	fi

	if [ $BINARY -eq 0 ]; then
		if [ -n "${out}" ]; then
			if [ "$END" != "0" ]; then
				/usr/bin/tail -n +${FROM} ${SRC} | head -n${END} > ${out}
			else ##this is empty file
				/usr/bin/touch ${out}
			fi
		else
			/usr/bin/tail -n +${FROM} ${SRC} | /usr/bin/head -n${END}
		fi
	else
		[ -z "${out}" ] && out=$( pwd )
		/usr/bin/tail +${FROM} ${SRC} | tar xpf - -C "${out}" --numeric-owner
	fi
}

# $hdrver used for determine correct struct of header
extractme()
{
	local _imgpart=0

	if [ -f "${jname}" ]; then
		SRC="${jname}"
	else
		SRC="${importdir}/${jname}.img"
		[ ! -f ${SRC} ] && err 1 "${MAGENTA}No such image: ${GREEN}${SRC}${NORMAL}"
	fi

	[ -n "${hdrver}" ] && _imgpart=$1

	DEST="${DATA}/${jname}"

	SPACER="___NCSTART_"
	BINARY=0
	END=0

	case "${part}" in
		"header")
			FROM="$( /usr/bin/awk '/^___NCSTART_HEADER=1/ { print NR + 1; exit 0; }' ${SRC} )"
			TO="$( /usr/bin/awk '/^___NCSTART_RCCONF=1/ { print NR + 1; exit 0; }' ${SRC} )"
			END=$((TO - FROM -1))
			;;
		"rcconf")
			FROM="$( /usr/bin/awk '/^___NCSTART_RCCONF=1/ { print NR + 1; exit 0; }' ${SRC} )"
			TO="$( /usr/bin/awk '/^___NCSTART_FSTAB=1/ { print NR + 1; exit 0; }' ${SRC} )"
			END=$((TO - FROM -1))
			;;
		"fstab")
			FROM="$( /usr/bin/awk '/^___NCSTART_FSTAB=1/ { print NR + 1; exit 0; }' ${SRC} )"
			TO="$( /usr/bin/awk '/^___NCSTART_PKGINFO=1/ { print NR + 1; exit 0; }' ${SRC} )"
			END=$((TO - FROM -1))
			;;
		"pkginfo")
			FROM="$( /usr/bin/awk '/^___NCSTART_PKGINFO=1/ { print NR + 1; exit 0; }' ${SRC} )"
			TO="$( /usr/bin/awk '/^___NCSTART_DESCR=1/ { print NR + 1; exit 0; }' ${SRC} )"
			END=$((TO - FROM -1))
			;;
		"descr")
			FROM="$( /usr/bin/awk '/^___NCSTART_DESCR=1/ { print NR + 1; exit 0; }' ${SRC} )"
			TO="$( /usr/bin/awk '/^___NCSTART_INFO=1/ { print NR + 1; exit 0; }' ${SRC} )"
			END=$((TO - FROM -1))
			;;
		"info")
			FROM="$( /usr/bin/awk '/^___NCSTART_INFO=1/ { print NR + 1; exit 0; }' ${SRC} )"
			if [ ${_imgpart} -ge 2 ]; then
				TO="$( /usr/bin/awk '/^___NCSTART_LOCALFSTAB=1/ { print NR + 1; exit 0; }' ${SRC} )"
			else
				TO="$( /usr/bin/awk '/^___NCSTART_SYSDATA=1/ { print NR + 1; exit 0; }' ${SRC} )"
			fi
			END=$((TO - FROM -1))
			;;
		"localfstab")
			FROM="$( /usr/bin/awk '/^___NCSTART_LOCALFSTAB=1/ { print NR + 1; exit 0; }' ${SRC} )"
			TO="$( /usr/bin/awk '/^___NCSTART_SYSDATA=1/ { print NR + 1; exit 0; }' ${SRC} )"
			END=$((TO - FROM -1))
			;;
		"sysdata")
			FROM="$( /usr/bin/awk '/^___NCSTART_SYSDATA=1/ { print NR + 1; exit 0; }' ${SRC} )"
			TO="$( /usr/bin/awk '/^___NCSTART_DATA=1/ { print NR + 1; exit 0; }' ${SRC} )"
			BINARY=1
			END=0
			;;
		"data")
			FROM="$( /usr/bin/awk '/^___NCSTART_DATA=1/ { print NR + 1; exit 0; }' ${SRC} )"
			BINARY=1
			END=0
			;;
	esac

	if ! is_number ${FROM}; then
		[ $FROM -ge 0 ] && extractchunk
	else
		err 1 "${MAGENTA}Error: image has no FROM/TO symbols. Looks like wrong format version or it is not CBSD image: ${GREEN}${jname}${NORMAL}"
	fi
}

packme()
{
	case ${part} in
		header)
			# use jailrcconfdir for back compatible with CBSD < 10.1.0
			[ ! -f "${jailrcconfdir}/rc.conf_${jname}" -a ! -f "${jailsysdir}/${jname}/rc.conf_${jname}" ] && err 1 "${MAGENTA}No such rcconf for: ${GREEN}$jname${NORMAL}"
			[ -f "${jailrcconfdir}/rc.conf_${jname}" ] && . ${jailrcconfdir}/rc.conf_${jname}
			[ -f "$jailsysdir/$jname/rc.conf_${jname}" ] && . $jailsysdir/$jname/rc.conf_${jname}
			echo "add header"
			echo "___NCSTART_HEADER=1_" > ${out}
			echo "hdrver=\"2\"" >> ${out}
			echo "jname=\"${jname}\"" >> ${out}
			echo "compress=\"1\"" >> ${out}
			echo "arch=\"${arch}\"" >> ${out}
			echo "ver=\"${ver}\"" >> ${out}
			DT=$( /bin/date "+%Y%m%d" )
			echo "date=\"${DT}\"" >> ${out}
			;;
		rcconf)
			# use jailrcconfdir for back compatible with CBSD < 10.1.0
			echo "___NCSTART_RCCONF=1" >> ${out}
			if [ -f "${jailsysdir}/${jname}/rc.conf_${jname}" ]; then
				/bin/cat $jailsysdir/$jname/rc.conf_${jname} >> ${out}
			else
				[ -f "${jailrcconfdir}/rc.conf_${jname}" ] && /bin/cat ${jailrcconfdir}/rc.conf_${jname} >> ${out}
			fi
			echo >> ${out}
			;;
		pkginfo)
			echo "___NCSTART_PKGINFO=1" >> ${out}
			PINFO="${jailsysdir}/${jname}/pkg_info"
			if [ -f "${PINFO}" ]; then
				/bin/cat ${PINFO} >> ${out}
			else
				echo "No pinfo" >> ${out}
			fi
			echo >> ${out}
			;;
		descr)
			echo "___NCSTART_DESCR=1" >> ${out}
			DESCR="${jailsysdir}/${jname}/descr"
			if [ -f "${DESCR}" ]; then
				/bin/cat ${DESCR} >> ${out}
			else
				echo "No descr" >> ${out}
			fi
			echo >> ${out}
			;;
		info)
			echo "___NCSTART_INFO=1" >> ${out}
			INFO="${jailsysdir}/${jname}/info"
			if [ -f "${INFO}" ]; then
				/bin/cat ${INFO} >> ${out}
			else
				echo "No info" >> ${out}
			fi
			echo >> ${out}
			;;
		fstab)
			echo "___NCSTART_FSTAB=1" >> ${out}
			[ -f "${jailfstabdir}/${jailfstabpref}${jname}" ] && /bin/cat ${jailfstabdir}/${jailfstabpref}${jname} >> ${out}
			echo >> ${out}
			;;
		localfstab)
			echo "___NCSTART_LOCALFSTAB=1" >> ${out}
			[ -f "${jailfstabdir}/${jailfstabpref}${jname}.local" ] && /bin/cat ${jailfstabdir}/${jailfstabpref}${jname}.local >> ${out}
			echo >> ${out}
			;;
		sysdata)
			echo "add sysdata"
			echo "___NCSTART_SYSDATA=1" >> ${out}
			cd $jailsysdir
			[ -d "$jname" ] || mkdir -p ${jname}
			TMPCHUNK="$tmpdir/sys$$.tgz"
			trap "rm -f ${TMPCHUNK}" 0 1 2 3 4
			tar cfz ${TMPCHUNK} ${jname} --numeric-owner > /dev/null 2>&1
			/bin/cat ${TMPCHUNK} >> ${out}
			echo >> ${out}
			;;
		data)
			echo "add data"
			# use jailrcconfdir for back compatible with CBSD < 10.1.0
			[ ! -f "${jailrcconfdir}/rc.conf_${jname}" -a ! -f "${jailsysdir}/${jname}/rc.conf_${jname}" ] && err 1 "${MAGENTA}No such rcconf for: ${GREEN}$jname${NORMAL}"
			[ -f ${jailrcconfdir}/rc.conf_${jname} ] && . ${jailrcconfdir}/rc.conf_${jname}
			[ -f $jailsysdir/$jname/rc.conf_${jname} ] && . $jailsysdir/$jname/rc.conf_${jname}
			eval data=\"\$data\"
			[ -n "${data}" -a -d "${data}" ] || err 1 "No such data directory $data."
			echo "___NCSTART_DATA=1" >> ${out}
			cd $( dirname ${data} )
			TMPCHUNK="$tmpdir/tmp$$.tgz"
			trap "rm -f ${TMPCHUNK}" 0 1 2 3 4
			/usr/bin/tar cfz ${TMPCHUNK} $( basename ${data} ) --numeric-owner > /dev/null 2>&1
			/bin/cat ${TMPCHUNK} >> ${out}
			;;
	esac
}

# MAIN
# cwd necessary for the relative actions
cd ${workdir}

case "$mode" in
	extract)
		extractme
		;;
	pack)
		[ -z "$out" ] && err 1 "${MAGENTA}out=tofile is mandatory${NORMAL}"
		packme
		;;
esac
