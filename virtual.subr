if [ ! "$_CBSD_VIRTUAL_SUBR" ]; then
_CBSD_VIRTUAL_SUBR=1
###


# generic/shared func for custom virtuals

init_iso()
{
	[ -z "${iso_img}" ] && return 1
	local _mydir="${srcdir}/iso"
	local _myfile="${_mydir}/${iso_img}"
	local i

	[ ! -d "${_mydir}" -o ! -h "${_mydir}" ] && mkdir -p ${_mydir}

	[ -z "${iso_img_dist}" ] && iso_img_dist="${iso_img}"

	if [ ! -f "${_myfile}" -a ! -f "${_mydir}/${iso_img_dist}" -a "${fetch}" = "1" ]; then
		[ -z "${iso_site}" ] && ${ECHO} "${MAGENTA}No such iso: ${GREEN}${_myfile}${MAGENTA} and ${GREEN}iso_site${MAGENTA} variable not found" && return 1
		${ECHO} "${MAGENTA}No such iso: ${GREEN}${_myfile}${MAGENTA} in ${GREEN}${_mydir}${NORMAL}"
		if getyesno "Shall i download it from: ${iso_site}?"; then
			${ECHO} "${MAGENTA}Download to: ${GREEN}${_mydir}/${iso_img_dist}${NORMAL}"
			for i in ${iso_site}; do
				${ECHO} "${MAGENTA}Processing: ${GREEN}${i}${NORMAL}"
				[ -s "${_mydir}/${iso_img_dist}" ] && continue # skip all other mirror when file exist
				fetchme -o ${_mydir}/${iso_img_dist} -u ${i}${iso_img_dist}
			done
		fi
	fi

	[ ! -s "${_mydir}/${iso_img_dist}" -a ! -s "${_myfile}" ] && err 1 "${MAGENTA}No such ${GREEN}${iso_img_dist}${MAGENTA}. Try to download it manually and put into ${GREEN}${_mydir}${NORMAL}"

	if [ -n "${iso_extract}" -a -f "${_mydir}/${iso_img_dist}" -a ! -f "${_myfile}" -a "${fetch}" = "1" ]; then
		${ECHO} "${MAGENTA}Extracting...${NORMAL}"
		set -o xtrace
		cd ${_mydir}
		${iso_extract} ${_mydir}/${iso_img_dist}
		set +o xtrace
	fi

	[ ! -f "${_myfile}" ] && return 1

	iso_img="${_myfile}"
	return 0
}

check_for_empty_hdd()
{
	local _err
	local dsk_size=0
	[ "${vm_boot}" != "hdd" ] && return 0
	# check for empty disk
#	_err=$( file -s ${data}/${MDFILE}| cut -d":" -f2|xargs)

#	[ -r ${data}/${MDFILE} ] && dsk_size=$( /usr/bin/stat -f "%z" ${data}/${MDFILE} 2>/dev/null )
	[ -r ${data}/${MDFILE} ] && dsk_size=$( /usr/bin/du -sk ${data}/${MDFILE} 2>/dev/null |awk '{printf $1}' )

#	if [ "${_err}" = "data" -o "${_err}" = "empty" ]; then
	if [ ${dsk_size} -lt 100 ]; then
		${ECHO} "${MAGENTA}Looks like ${GREEN}${data}/${MDFILE}${MAGENTA} is empty.${NORMAL}"
		if getyesno "May be want to boot from CD?"; then
			cd_boot_once=1
			vm_boot="cd";
		fi
	fi
}


# print next free vnc/rdp port
# $1 - start port
get_next_rd_port()
{
	local _i _start=3390 _rd_port=0 _tmp_port=0
	local _x _used

	[ -n "${1}" ] && _start="$1"

#	_tmp_port=$( cbsdsql local SELECT vm_rd_port FROM ${emulator} WHERE jname IN \( SELECT jname FROM jails WHERE status!='1' \); )
	_tmp_port=$( cbsdsql local SELECT vm_rd_port FROM ${emulator} )

	for _i in $( /usr/bin/seq ${_start} 5000 ); do
		_used=0
		for _x in ${_tmp_port}; do
			[ "${_x}" = "${_i}" ] && _used=1 && break
		done
		
		if [ ${_used} -eq 0 ]; then
			_rd_port=${_i}
			break
		fi
	done
	echo ${_rd_port}
}

###
fi
